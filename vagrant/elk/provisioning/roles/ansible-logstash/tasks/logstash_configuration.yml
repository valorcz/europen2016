---
#TODO should delete all existing configs -but only if successful valitation....
- name:         get the list of input templates to transfer
  local_action: "shell ls {{logstash_config_files_input}}/* | sed 's~.*/~~g'"
  tags: logstash_config_files
  register:     template_files_input
  when: logstash_config_files_input is defined

- name:         get the list of filter templates to transfer
  local_action: "shell ls {{logstash_config_files_filter}}/* | sed 's~.*/~~g'"
  tags: logstash_config_files
  register:     template_files_filter
  when: logstash_config_files_filter is defined

- name:         get the list of output templates to transfer
  local_action: "shell ls {{logstash_config_files_output}}/* | sed 's~.*/~~g'"
  tags: logstash_config_files
  register:     template_files_output
  when: logstash_config_files_output is defined

- name: Copy Logstash input config files
  template: src={{logstash_config_files_input}}/{{ item }} 
            dest={{ logstash_conf_dir }}/{{ item }}
            validate="{{ logstash_home_dir }}/bin/logstash agent -t -f %s"
  with_items:
  - "{{ template_files_input.stdout.splitlines() }}"
  notify:
   - restart logstash
  tags: logstash_config_files
  when: logstash_config_files_input is defined



- name: Copy Logstash filter config files
  template: src={{logstash_config_files_filter}}/{{ item }} 
            dest={{ logstash_conf_dir }}/{{ item }}
            validate="{{ logstash_home_dir }}/bin/logstash agent -t -f %s"
  with_items:
  - "{{ template_files_filter.stdout.splitlines() }}"
  notify:
   - restart logstash
  tags: logstash_config_files
  when: logstash_config_files_filter is defined



- name: Copy Logstash output config files
  template: src={{logstash_config_files_output}}/{{ item }}
            dest={{ logstash_conf_dir }}/{{ item }}
            validate="{{ logstash_home_dir }}/bin/logstash agent -t -f %s"
  with_items:
  - "{{ template_files_output.stdout.splitlines() }}"
  notify:
   - restart logstash
  tags: logstash_config_files
  when: logstash_config_files_output is defined



 # cLEAN AND DELETE UNMANGED FILES

# - shell: ls -1 {{ logstash_conf_dir }}
#   register: logstash_conf_contents
#   tags: logstash_config_files

# - name: Removing unmanaged files from logstash config dir
#   file: path={{ logstash_conf_dir }}/{{ item }} state=absent
#   with_items: logstash_conf_contents.stdout_lines
#   when: item not in (( template_files_input.stdout.splitlines() + template_files_filter.stdout.splitlines() + template_files_output.stdout.splitlines()) + ["00-ansible-gen-input.conf" ,"51-ansible-gen-filters.conf", "99-ansible-gen-output.conf" ])
#   tags: logstash_config_files
#   when: (logstash_config_files_input is defined or logstash_config_files_filter is defined  or logstash_config_files_output is defined )

- name: Copy Logstash Input Configuration
  template: src=input.conf.j2
            dest={{ logstash_conf_dir }}00-ansible-gen-input.conf
            owner=root
            group=root
            mode=0644
            validate="{{ logstash_home_dir }}/bin/logstash agent -t -f %s"
  notify:
   - restart logstash
  tags: logstash_inputs
  when: logstash_inputs is defined

- name: Copy Logstash Filter Configuration
  template: src=filters.conf.j2
            dest={{ logstash_conf_dir }}51-ansible-gen-filters.conf
            owner=root 
            group=root 
            mode=0644
            validate="{{ logstash_home_dir }}/bin/logstash agent -t -f %s"
  notify:
   - restart logstash
  tags: logstash_filters
  when: logstash_filters is defined

- name: Copy Logstash Output Configuration
  template: src=output.conf.j2
            dest={{ logstash_conf_dir }}99-ansible-gen-output.conf
            owner=root 
            group=root 
            mode=0644
            validate="{{ logstash_home_dir }}/bin/logstash agent -t -f %s"
  notify:
   - restart logstash
  tags: logstash_outputs
  when: logstash_outputs is defined

