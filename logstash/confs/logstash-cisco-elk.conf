input {
  tcp {
    port => 5602
    type => europeninput
  }
}

filter {
	grok {
    		match => ["message", "%{CISCOTIMESTAMP:timestamp} %{SYSLOGHOST:sysloghost} %%{CISCOTAG:ciscotag}: %{GREEDYDATA:cisco_message}"]
  	}

  	# Extract fields from the each of the detailed message types
	grok {
		match => [
         "cisco_message", "%{CISCOFW106100_2_3}",
				 "cisco_message", "%{CISCOFW106001}",
				 "cisco_message", "%{CISCOFW106006_106007_106010}",
		]
	}

  # Drop the original cisco_message to save some space
  mutate { remove_field => "cisco_message" }

  # Parse the syslog severity and facility
  syslog_pri { }

	geoip {
      add_tag => [ "GeoIP" ]
      database => "../geoDB/GeoLiteCity.dat"
      source => "src_ip"
  }

	if [geoip][city_name]      == "" { mutate { remove_field => "[geoip][city_name]" } }
    	if [geoip][continent_code] == "" { mutate { remove_field => "[geoip][continent_code]" } }
    	if [geoip][country_code2]  == "" { mutate { remove_field => "[geoip][country_code2]" } }
    	if [geoip][country_code3]  == "" { mutate { remove_field => "[geoip][country_code3]" } }
    	if [geoip][country_name]   == "" { mutate { remove_field => "[geoip][country_name]" } }
    	if [geoip][latitude]       == "" { mutate { remove_field => "[geoip][latitude]" } }
    	if [geoip][longitude]      == "" { mutate { remove_field => "[geoip][longitude]" } }
    	if [geoip][postal_code]    == "" { mutate { remove_field => "[geoip][postal_code]" } }
    	if [geoip][region_name]    == "" { mutate { remove_field => "[geoip][region_name]" } }
    	if [geoip][time_zone]      == "" { mutate { remove_field => "[geoip][time_zone]" } }

	# Gets the source IP whois information from the GeoIPASNum.dat flat file database
	 geoip {
      add_tag => [ "Whois" ]
      database => "../geoDB/GeoIPASNum.dat"
      source => "src_ip"
   }

 	# Parse the date
#   	date {
#     		match => ["timestamp",
#       			"MMM dd HH:mm:ss",
#       			"MMM  d HH:mm:ss",
#       			"MMM dd yyyy HH:mm:ss",
#       			"MMM  d yyyy HH:mm:ss"
#     		]
#   	}
}

output {
  # This is good for debugging
  stdout {
#    codec => json
    codec => dots
  }
  # Only the messages that passed
  if "_grokparsefailure" not in [tags] {
    elasticsearch { }
  }
}

